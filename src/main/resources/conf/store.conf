store {

    #how many replicas of the same data there'll be. This number will be referred as R.
    #The store will support up to R-1 failures
    dataReplicas = 3
    #how much to divide the hash space
    hashSpacePartition = 8
    #how many nodes will be access point to the system for each client
    assignedNodesPerClient = 2
    #If this number of replicas are available (= reachable nodes), take action and warn the system that
    #too few reachable replicas remain, thus down some node or add some new node
    minReachableReplicasBeforeTakeAction = 1
    #start automatically the store if enough nodes join it
    autoStartStore = true

    node {
        #after how many clients a node receives it should notify the server that its load changed
        #depending of the magnitude of the system
        #Is set to 1 because in the example there will probably be not many clients
        clientThresholdNotification = 1
    }

    connection {
        #the standard timeout for node's requests
        stdTimeout = 5
        #the max number of passages a message can have. Unless there are a lot of replicas, in general could be low.1
        #Allows to avoid unseen cases in which a message would be forwarded indefinitely
        stdMsgAliveSteps = 64
    }
}